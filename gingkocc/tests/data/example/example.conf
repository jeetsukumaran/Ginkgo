/* A Documented Comprehensive Example of a Gingko Run Configuration File */

/**
 * 1. A configuration file consists of multiple configration blocks. 
 * 2. Each block begins with an at-sign, followed by a block keyword 
 *    describing the type of block, followed by an name or label (sometimes this
 *   is optional), followed by the block body.
 * 3. The block body is enclosed in curly braces.
 * 4. Within each block body are a series of entries, typically beginning with a 
 *    keyword, followed by an equal sign, followed by a value or values, and 
 *    terminated with a semi-colon.
 * 5. Whitespace (spaces, tabs, newlines) are non-significant but do serve as a 
 *    token delimiter.
 * 6. Comments are C-style, i.e. non-nesting, open with a forward slash followed
 *    by an asterisk, and closed with an asterisk followed by a forward slash.
 */

/** 
 * A "World" block describes the landscape dimensions, the number of generations
 * for which to run the simulation, the number of factors of the fitness regime 
 * (i.e., number of dimensions to the fitness equation), a random seed, etc.
 * The label ("ExampleWorld" here) serves as a prefix for all the output 
 * produced by runs based on this configuration file.
 */ 
@world ExampleWorld {
    
    /*** MANDATORY ENTRIES ***/
    
    nrows           = 40;       /* The x-dimension of the landscape. */
    ncols           = 20;       /* The y-dimension of the landscape. */
    ngens           = 101;      /* The number of generations to run the simulation. */
    nfitness        = 10;       /* The number of dimensions to the fitness function: 1-10. */
    
    /*** OPTIONAL ENTRIES ***/
    
    /**
     * Seed for the random number generator.
     * Can also be specified on the command-line using the "-z" option, in which
     * case will override the value given here. If not specified on the command-
     * line, and this entry is absent, then the system time will be used as the 
     * seed.
     */
    rseed           = 42;
    
    /**
     * Under the fitness function, a difference of more than 3 between the 
     * environmental value and the genotypic value results in a survival 
     * probability of ~0.0001.
     * To allow for finer-grained fitness regimes, specify a number > 1 here.
     * All fitness factors (genotypic and environmental) will then be divided by
     * this number, yielding a wider range of values with non-trivial survival 
     * probabilities.
     */
    fitness-grain   = 1;
    
    /**
     * By default, at the end of the simulation, a full set of trees including
     * every individual in the simulation will be produced. These may not be
     * necessary if you have created custom tree samplings, and the full trees
     * may be prohibitively computationally expensive to produce. By setting this 
     * entry to 1, you stop the final default set of trees from being calculated.
     */
    suppress-final-output = 0;
}

/**
 * A species block describes the ecology (reproductive behavior, movement rates,
 * fitness etc.) of a species. The label serves to identify the species and will
 * be embedded as part of the tree and occurrence data filenames produces for
 * this species.
 */
@species Pseudozoon { 

    /**
     * The default values for the genotype of an individual of this species.
     */
    genotypic-fitness = 0 0 0 0 0 
                        0 0 0 0 0;
       
    /**
     * The fitness function calculated for this species will be weighted by
     * these values. A value of < 1 minimizes the effect of that component of
     * the fitness function (i.e., the species is relatively tolerant to
     * that environmental parameter) while a value of > 1 emphasizes the effect
     * (i.e., the species is relatively more sensitive to that parameter.)
     */
    selection-weights = 1 1 1 1 1
                        1 1 1 1 1;
                        
    /** 
     * The probability (per fitness factor per individual per generation) that
     * a fitness factor mutates in value as it is inherited.
     */
    mutation-rate = 0.01;
    
    /**
     * The 'window' for a fitness factor mutation if it occurs: i.e, the mutated
     * fitness factors will be +/- this value.
     */
    mutation-size = 0.01;
    
    /**
     * The number of offspring produced in a successful mating by two 
     * individuals.
     */
    fecundity = 4;
    
    /**
     * Future versions of GINGKO will allow the evolution of reproductive rates.
     */
    fecundity-evolution-size = 0;
    
    /**
     * A "seed" population, to introduce this species to the landscape.
     * The number following "init*" is the number of individuals per seeding
     * event, and following the equals sign should be a list of positions in 
     * the form of "x,y" (with no space between the x-coordinate, the comma,
     * or the y-coordinate) where the seed populations will be introduced.
     */
    init*30 = 10,10 ;
    
    /**
     * The total amount of "movement cost" that individuals of this species
     * can "pay" during the migration phase.
     */
    movement-capacity = 1;
}

/** Another species in the simulation. */
@species Caminacule { 
    selection-weights = 0.1 0.1 0.1 0.1 0.1
                        2 2 2 2 2;
    genotypic-fitness = 0 0 0 0 0 
                        0 0 0 0 0;
    mutation-rate = 0.01;
    mutation-size = 0.01;
    fecundity = 4;
    fecundity-evolution-size = 0;
    init*60 =  10,10 ;
    movement-capacity = 4;    
}

/**
 * Generation blocks describe changes to the landscape enviroment, carrying
 * capacity and species-specific movement costs. 
 * The name of the block sets the time which the settings described in the block
 * take place. So, for example, "Generation 0" describes settings/changes for
 * the first generation of the simulation, while "Generation 72" describes 
 * settings/changes for the second generation.
 * The most important thing to set in Generation 0 is the carrying capacity of
 * the landscape. This defaults to 0, which means no individuals will survive
 * the first round. The environment defaults to 0 as well (all components),
 * but as the default genotype value for all species is 0, this means that the
 * fitness is maximum by default. Movement costs default to 1.
 */
@generation 0 {
    /** 
     * Carrying capacity: ESRI ASCII grid file of same dimensions of the 
     * landscape describing maximum number of organisms (of all species) that 
     * can occupy each cell at the end of each round.
     */
    carrying-capacity = cc1C.grd;
    
    /** 
     * Movemenent cost for species: ESRI ASCII grid file of same dimensions of 
     * the landscape describing cost for entering each cell in the landscape.
     * Movement costs are specific to each species (i.e., different species might
     * have different movement costs for entering the same cell).
     */
     movement:Pseudozoon = m1.grd;
     movement:Caminacule = m0.grd;
     
     /**
      * Environment settings: ESRI ASCII grid file of the same dimensions of
      * the landscape describing the fitness factor value for each cell. 
      * Factor components/dimensions are referred to by their 1-based index.
      * Thus, "1" refers to the first component or factor, while "10" refers
      * the last, if there are 10 factors specified.
      */
    environment:1 = e111.grd;      
    environment:2 = e101.grd;    
    environment:3 = e111.grd;    
    environment:4 = e111.grd;    
}

/** 
 * During this generation, we change the movment costs for one species. All
 * other values (movement for the other species, environment, carrying capacity, 
 * etc.) remain unaffected.
 */
 
@generation 10 {
    movement:Pseudozoon = mx.grd;
}

/** 
 * Here, we change the environment values for the first component of the
 * environment. All other values (other environment values, movmenet, carrying
 * capacity) remain unaffected.
 */
 
@generation 20 {
    movement:Pseudozoon = mx.grd;
}

/** Here we ask for occupancy data for one of the species in the landscape. */
@occurs {
    species = Pseudozoon;
    gen = 10;
}

/** 
 * Here we ask for occupancy data for the other species in the landscape. The 
 * label "ID1" will be embedded in the filename produced (along with the default
 * species name and generation #).
 */
@occurs ID1 {
    species = Pseudozoon;
    gen = 10;
}

